const { Sequelize } = require("sequelize");

const InspectorBeatmapModel = (db) => db.define('Beatmap', {
    beatmap_id: { type: Sequelize.INTEGER, primaryKey: true, allowNull: false, },
    beatmapset_id: { type: Sequelize.INTEGER, allowNull: false },
    approved: { type: Sequelize.INTEGER, allowNull: false, },
    total_length: { type: Sequelize.INTEGER, allowNull: false },
    hit_length: { type: Sequelize.INTEGER, allowNull: false },
    version: { type: Sequelize.STRING, allowNull: false },
    artist: { type: Sequelize.STRING, allowNull: false },
    title: { type: Sequelize.STRING, allowNull: false },
    creator: { type: Sequelize.STRING, allowNull: false },
    creator_id: { type: Sequelize.INTEGER, allowNull: false },
    mode: { type: Sequelize.INTEGER, allowNull: false },
    cs: { type: Sequelize.FLOAT, allowNull: false },
    od: { type: Sequelize.FLOAT, allowNull: false },
    ar: { type: Sequelize.FLOAT, allowNull: false },
    hp: { type: Sequelize.FLOAT, allowNull: false },
    approved_date: { type: Sequelize.DATE, allowNull: false },
    submitted_date: { type: Sequelize.DATE, allowNull: false },
    last_updated_date: { type: Sequelize.DATE, allowNull: false },
    bpm: { type: Sequelize.FLOAT, allowNull: false },
    bpm_min: { type: Sequelize.FLOAT, allowNull: false },
    bpm_max: { type: Sequelize.FLOAT, allowNull: false },
    source: { type: Sequelize.STRING, allowNull: false },
    tags: { type: Sequelize.STRING, allowNull: false },
    genre_id: { type: Sequelize.INTEGER, allowNull: false },
    language_id: { type: Sequelize.INTEGER, allowNull: false },
    max_combo: { type: Sequelize.INTEGER, allowNull: false },
    star_rating: { type: Sequelize.FLOAT, allowNull: false },
    star_rating_aim: { type: Sequelize.FLOAT, allowNull: false },
    star_rating_speed: { type: Sequelize.FLOAT, allowNull: false },
    eyup_star_rating: { type: Sequelize.FLOAT, allowNull: false },
    hit_objects: { type: Sequelize.INTEGER, allowNull: false },
    num_circles: { type: Sequelize.INTEGER, allowNull: false },
    num_sliders: { type: Sequelize.INTEGER, allowNull: false },
    num_spinners: { type: Sequelize.INTEGER, allowNull: false },
    favorites: { type: Sequelize.INTEGER, allowNull: false },
    plays: { type: Sequelize.INTEGER, allowNull: false },
    passes: { type: Sequelize.INTEGER, allowNull: false },
    recalculate: { type: Sequelize.BOOLEAN, allowNull: false },
    max_score: { type: Sequelize.INTEGER, allowNull: false },
    packs: { type: Sequelize.STRING, allowNull: false },
    rating: { type: Sequelize.FLOAT, allowNull: false },
    video: { type: Sequelize.BOOLEAN, allowNull: false },
    storyboard: { type: Sequelize.BOOLEAN, allowNull: false },
    download_unavailable: { type: Sequelize.BOOLEAN, allowNull: false },
    audio_unavailable: { type: Sequelize.BOOLEAN, allowNull: false },
    file_md5: { type: Sequelize.STRING, allowNull: false },
}, {
    tableName: 'beatmap',
    timestamps: false
});
module.exports.InspectorBeatmapModel = InspectorBeatmapModel;